{"ast":null,"code":"import _slicedToArray from \"/home/wasi/Documents/pesto/prep/to-do/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wasi/Documents/pesto/prep/to-do/src/components/Todo.js\";\nimport React, { useState } from 'react';\nimport Task from './task/Task';\nimport './Todo.css';\n\nconst Todo = () => {\n  const tasklists = [{\n    title: 'Do Leetcode exercises',\n    completed: true\n  }, {\n    title: 'Take Shower',\n    completed: true\n  }, {\n    title: 'Have breakfast',\n    completed: true\n  }, {\n    title: 'Go to office',\n    completed: false\n  }];\n\n  const _useState = useState(tasklists),\n        _useState2 = _slicedToArray(_useState, 2),\n        tasks = _useState2[0],\n        setTask = _useState2[1];\n\n  const addTask = title => {\n    const newTasks = [...tasks, {\n      title: title,\n      completed: false\n    }];\n  };\n\n  return React.createElement(\"div\", {\n    className: \"task-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, tasks.map((item, index) => React.createElement(Task, {\n    task: item,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/home/wasi/Documents/pesto/prep/to-do/src/components/Todo.js"],"names":["React","useState","Task","Todo","tasklists","title","completed","tasks","setTask","addTask","newTasks","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;;AAKA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,SAAS,GAAG,CACd;AAACC,IAAAA,KAAK,EAAE,uBAAR;AAAkCC,IAAAA,SAAS,EAAE;AAA7C,GADc,EAEd;AAACD,IAAAA,KAAK,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAE;AAAlC,GAFc,EAGd;AAACD,IAAAA,KAAK,EAAE,gBAAR;AAA0BC,IAAAA,SAAS,EAAE;AAArC,GAHc,EAId;AAACD,IAAAA,KAAK,EAAE,cAAR;AAAwBC,IAAAA,SAAS,EAAE;AAAnC,GAJc,CAAlB;;AADe,oBAOUL,QAAQ,CAACG,SAAD,CAPlB;AAAA;AAAA,QAORG,KAPQ;AAAA,QAODC,OAPC;;AAQf,QAAMC,OAAO,GAAIJ,KAAD,IAAW;AACtB,UAAMK,QAAQ,GAAG,CAAC,GAAGH,KAAJ,EAAW;AAACF,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAAX,CAAjB;AACJ,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCC,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACP,oBAAC,IAAD;AACC,IAAA,IAAI,EAAED,IADP;AAEC,IAAA,GAAG,EAAEC,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADD,CADJ,CADJ;AAYH,CAxBD;;AAyBA,eAAeV,IAAf","sourcesContent":["import React, { useState} from 'react';\nimport Task from './task/Task'\nimport './Todo.css'\n\n\n\n\nconst Todo = () => {\n    const tasklists = [\n        {title: 'Do Leetcode exercises' , completed: true},\n        {title: 'Take Shower', completed: true},\n        {title: 'Have breakfast', completed: true},\n        {title: 'Go to office', completed: false}\n    ]\n    const [tasks, setTask] = useState(tasklists);\n    const addTask = (title) => {\n         const newTasks = [...tasks, {title: title, completed: false} ]\n    }\n\n    return (\n        <div className='task-container'>\n            <div className='task-list'>\n            {tasks.map((item, index) => (\n                <Task \n                 task={item}\n                 key={index} \n                />\n            ))}\n            </div>\n        </div>\n    )\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}